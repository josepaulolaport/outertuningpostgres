version: '3.1'

networks:
  mynetwork:
    driver: bridge

services:

  mysql:
    image: mysql:8.0.19
    command: --default-authentication-plugin=mysql_native_password --secure-file-priv=/opt --lower-case-table-names=1
    restart: always
    ports:
      - 3306:3306
      - 33060:33060
    volumes:
      - ./tpch_load_data_test:/opt
      - ./tpch_load_data_test/load.sh:/docker-entrypoint-initdb.d/load.sh
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: mysql
    security_opt:
      - seccomp:unconfined
    networks:
      - mynetwork

  postgres:
    image: postgres:11.22-bullseye
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    command:
      - "postgres"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_destination=csvlog"
      - "-c"
      - "log_directory=/var/log/postgresql"
      - "-c"
      - "log_filename=postgresqllogs"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_min_duration_statement=0"
      - "-c"
      - "timezone=America/Sao_Paulo"
      - "-c"
      - "log_timezone=America/Sao_Paulo"      
      - "-c"
      - "shared_preload_libraries=file_fdw"
    volumes:
      - ./postgres_load_data_test:/opt
      - ./postgres_load_data_test/load.sh:/docker-entrypoint-initdb.d/load.sh
    networks:
      - mynetwork

  # oracle:
  #   image: wnameless/oracle-xe-11g
  #   restart: always
  #   environment:
  #     - ORACLE_ALLOW_REMOTE=true
  #     - ORACLE_DISABLE_ASYNCH_IO=true
  #   ports:
  #     - 1521:1521
  #   volumes:
  #     - ./oracle_load_data_test:/docker-entrypoint-initdb.d
  #   networks:
  #     - mynetwork**

  workload:
    image: workload-executor
    restart: always
    build:
      context: ./tpch_workload_executor
      dockerfile: ./Dockerfile
    depends_on:
      - mysql
      - postgres
      # - oracle
      - webapi
    links:
      - mysql
      - postgres
      # - oracle
      - webapi
    networks:
      - mynetwork

  webapi:
    build:
      context: ./webapi/demo/demo
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - 8080:8080
    volumes:
      - "./tpch_workload_executor/output:/usr/local/tomcat/docker-compose/tpch_workload_executor/output"
    networks:
      - mynetwork

  outertuning:
    image: outertuning
    restart: always
    depends_on:
      - mysql
      - postgres
      # - oracle
      - webapi
    links:
      - mysql
      - postgres
      # - oracle
      - webapi
    ports:
      - 80:8080
    volumes:
      - "./tpch_workload_executor/output:/usr/local/tomcat/docker-compose/tpch_workload_executor/output"
    networks:
      - mynetwork
